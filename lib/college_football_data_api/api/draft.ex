# NOTE: This file is auto generated by OpenAPI Generator 6.2.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule CollegeFootballDataAPI.Api.Draft do
  @moduledoc """
  API calls for all endpoints tagged `Draft`.
  """

  alias CollegeFootballDataAPI.Connection
  import CollegeFootballDataAPI.RequestBuilder

  @doc """
  List of NFL Draft picks
  List of NFL Draft picks

  ### Parameters

  - `connection` (CollegeFootballDataAPI.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:year` (integer()): Year filter
    - `:nflTeam` (String.t): NFL team filter
    - `:college` (String.t): Player college filter
    - `:conference` (String.t): College confrence abbreviation filter
    - `:position` (String.t): NFL position filter

  ### Returns

  - `{:ok, [%DraftPick{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_draft_picks(Tesla.Env.client, keyword()) :: {:ok, nil} | {:ok, list(CollegeFootballDataAPI.Model.DraftPick.t)} | {:error, Tesla.Env.t}
  def get_draft_picks(connection, opts \\ []) do
    optional_params = %{
      :year => :query,
      :nflTeam => :query,
      :college => :query,
      :conference => :query,
      :position => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/draft/picks")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, [%CollegeFootballDataAPI.Model.DraftPick{}]},
      {400, false}
    ])
  end

  @doc """
  List of NFL positions
  List of NFL positions

  ### Parameters

  - `connection` (CollegeFootballDataAPI.Connection): Connection to server
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, [%DraftPosition{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_nfl_positions(Tesla.Env.client, keyword()) :: {:ok, nil} | {:ok, list(CollegeFootballDataAPI.Model.DraftPosition.t)} | {:error, Tesla.Env.t}
  def get_nfl_positions(connection, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/draft/positions")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, [%CollegeFootballDataAPI.Model.DraftPosition{}]},
      {400, false}
    ])
  end

  @doc """
  List of NFL teams
  List of NFL teams

  ### Parameters

  - `connection` (CollegeFootballDataAPI.Connection): Connection to server
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, [%DraftTeam{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_nfl_teams(Tesla.Env.client, keyword()) :: {:ok, nil} | {:ok, list(CollegeFootballDataAPI.Model.DraftTeam.t)} | {:error, Tesla.Env.t}
  def get_nfl_teams(connection, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/draft/teams")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, [%CollegeFootballDataAPI.Model.DraftTeam{}]},
      {400, false}
    ])
  end
end

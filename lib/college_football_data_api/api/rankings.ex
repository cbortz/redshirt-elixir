# NOTE: This file is auto generated by OpenAPI Generator 6.2.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule CollegeFootballDataAPI.Api.Rankings do
  @moduledoc """
  API calls for all endpoints tagged `Rankings`.
  """

  alias CollegeFootballDataAPI.Connection
  import CollegeFootballDataAPI.RequestBuilder

  @doc """
  Historical polls and rankings
  Poll rankings

  ### Parameters

  - `connection` (CollegeFootballDataAPI.Connection): Connection to server
  - `year` (integer()): Year/season filter for games
  - `opts` (keyword): Optional parameters
    - `:week` (integer()): Week filter
    - `:seasonType` (String.t): Season type filter (regular or postseason)

  ### Returns

  - `{:ok, [%RankingWeek{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_rankings(Tesla.Env.client, integer(), keyword()) :: {:ok, nil} | {:ok, list(CollegeFootballDataAPI.Model.RankingWeek.t)} | {:error, Tesla.Env.t}
  def get_rankings(connection, year, opts \\ []) do
    optional_params = %{
      :week => :query,
      :seasonType => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/rankings")
      |> add_param(:query, :year, year)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, [%CollegeFootballDataAPI.Model.RankingWeek{}]},
      {400, false}
    ])
  end
end

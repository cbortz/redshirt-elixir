# NOTE: This file is auto generated by OpenAPI Generator 6.2.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Redshirt.Api.Betting do
  @moduledoc """
  API calls for all endpoints tagged `Betting`.
  """

  alias Redshirt.Connection
  import Redshirt.RequestBuilder

  @doc """
  Betting lines
  Closing betting lines

  ### Parameters

  - `connection` (Redshirt.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:gameId` (integer()): Game id filter
    - `:year` (integer()): Year/season filter for games
    - `:week` (integer()): Week filter
    - `:seasonType` (String.t): Season type filter (regular or postseason)
    - `:team` (String.t): Team
    - `:home` (String.t): Home team filter
    - `:away` (String.t): Away team filter
    - `:conference` (String.t): Conference abbreviation filter

  ### Returns

  - `{:ok, [%GameLines{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_lines(Tesla.Env.client(), keyword()) ::
          {:ok, nil} | {:ok, list(Redshirt.Model.GameLines.t())} | {:error, Tesla.Env.t()}
  def get_lines(connection, opts \\ []) do
    optional_params = %{
      :gameId => :query,
      :year => :query,
      :week => :query,
      :seasonType => :query,
      :team => :query,
      :home => :query,
      :away => :query,
      :conference => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/lines")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, [Redshirt.Model.GameLines.model_structure()]},
      {400, false}
    ])
  end
end

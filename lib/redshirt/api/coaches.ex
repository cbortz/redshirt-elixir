# NOTE: This file is auto generated by OpenAPI Generator 6.2.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Redshirt.Api.Coaches do
  @moduledoc """
  API calls for all endpoints tagged `Coaches`.
  """

  alias Redshirt.Connection
  import Redshirt.RequestBuilder

  @doc """
  Coaching records and history
  Coaching history

  ### Parameters

  - `connection` (Redshirt.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:firstName` (String.t): First name filter
    - `:lastName` (String.t): Last name filter
    - `:team` (String.t): Team name filter
    - `:year` (integer()): Year filter
    - `:minYear` (integer()): Minimum year filter (inclusive)
    - `:maxYear` (integer()): Maximum year filter (inclusive)

  ### Returns

  - `{:ok, [%Coach{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_coaches(Tesla.Env.client(), keyword()) ::
          {:ok, list(Redshirt.Model.Coach.t())} | {:error, Tesla.Env.t()}
  def get_coaches(connection, opts \\ []) do
    optional_params = %{
      :firstName => :query,
      :lastName => :query,
      :team => :query,
      :year => :query,
      :minYear => :query,
      :maxYear => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/coaches")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, [Redshirt.Model.Coach.model_structure()]}
    ])
  end
end

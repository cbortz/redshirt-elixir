# NOTE: This file is auto generated by OpenAPI Generator 6.2.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Redshirt.Model.ReturningProduction do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :season,
    :team,
    :conference,
    :totalPPA,
    :totalPassingPPA,
    :totalReceivingPPA,
    :totalRushingPPA,
    :percentPPA,
    :percentPassingPPA,
    :percentReceivingPPA,
    :percentRushingPPA,
    :usage,
    :passingUsage,
    :receivingUsage,
    :rushingUsage
  ]

  @type t :: %__MODULE__{
    :season => integer() | nil,
    :team => String.t | nil,
    :conference => String.t | nil,
    :totalPPA => float() | nil,
    :totalPassingPPA => float() | nil,
    :totalReceivingPPA => float() | nil,
    :totalRushingPPA => float() | nil,
    :percentPPA => float() | nil,
    :percentPassingPPA => float() | nil,
    :percentReceivingPPA => float() | nil,
    :percentRushingPPA => float() | nil,
    :usage => float() | nil,
    :passingUsage => float() | nil,
    :receivingUsage => float() | nil,
    :rushingUsage => float() | nil
  }
end

defimpl Poison.Decoder, for: Redshirt.Model.ReturningProduction do
  def decode(value, _options) do
    value
  end
end


# NOTE: This file is auto generated by OpenAPI Generator 6.2.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Redshirt.Model.GameWeather do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :id,
    :season,
    :week,
    :seasonType,
    :startTime,
    :gameIndoors,
    :homeTeam,
    :homeConference,
    :awayTeam,
    :awayConference,
    :venueId,
    :venue,
    :temperature,
    :dewPoint,
    :humidity,
    :precipitation,
    :snowfall,
    :windDirection,
    :windSpeed,
    :pressure,
    :weatherConditionCode,
    :weatherCondition
  ]

  @type t :: %__MODULE__{
    :id => integer() | nil,
    :season => integer() | nil,
    :week => integer() | nil,
    :seasonType => String.t | nil,
    :startTime => String.t | nil,
    :gameIndoors => boolean() | nil,
    :homeTeam => String.t | nil,
    :homeConference => String.t | nil,
    :awayTeam => String.t | nil,
    :awayConference => String.t | nil,
    :venueId => integer() | nil,
    :venue => String.t | nil,
    :temperature => float() | nil,
    :dewPoint => float() | nil,
    :humidity => float() | nil,
    :precipitation => float() | nil,
    :snowfall => float() | nil,
    :windDirection => float() | nil,
    :windSpeed => float() | nil,
    :pressure => float() | nil,
    :weatherConditionCode => integer() | nil,
    :weatherCondition => String.t | nil
  }
end

defimpl Poison.Decoder, for: Redshirt.Model.GameWeather do
  def decode(value, _options) do
    value
  end
end

